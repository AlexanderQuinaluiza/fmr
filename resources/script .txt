ALTER TABLE DESCUENTOS
DROP  foreign key FK_TIENE_DESCUENTO;

ALTER TABLE DESCUENTOS
DROP COLUMN ID_PRO;

create TABLE DETALLES_DESCUENTOS(
ID_PRO BIGINT(20) NOT NULL,
ID_DESC BIGINT NOT NULL,
CONSTRAINT FK_PROD_DET_DESC FOREIGN KEY (ID_PRO) REFERENCES PRODUCTOS(ID_PRO),
CONSTRAINT FK_DESC_DET_DESC FOREIGN KEY (ID_DESC) REFERENCES DESCUENTOS(ID_DESC)
) ENGINE InnoDB;


CREATE DEFINER=`root`@`localhost` PROCEDURE `pGetDescuentoByProducto`(IN `idproducto` INT)
NO SQL
begin
SELECT d.PORCENTAJE_DESC from DESCUENTOS as d,
PRODUCTOS as p ,DETALLES_DESCUENTOS as dt WHERE p.ID_PRO = dt.ID_PRO AND
p.ID_PRO = idproducto AND
CURRENT_DATE <= cast(d.FECHA_FIN_DESC as date)
AND d.ESTADO_DESC=1
and dt.ID_DESC=d.ID_DESC
limit 1;
END

/** procedimiento para verificar si la caja esta aperturada*/

drop procedure if exists spGetApertura;
create procedure spGetApertura(in caja int, in usuario int)
select count(ID_CCJ) as resultado from CIERRE_CAJA 
where date_format(FECHA_APERTUTA_CCJ,'%d-%m-%Y') = date_format(sysdate(),'%d-%m-%Y')
AND ID_CAJA=caja and ID_USU= usuario;

/** procedimiento para sacar los datos de cabecera de factura ***/
drop procedure if exists spGetCabeceraFac;

create procedure spGetCabeceraFac(in usuario int)
select g.ID_AGE, g.NOMBRE_AGE, g.DIRECCION_AGE, g.RUC_AGE, g.LOGO_AGE, c.DESCRIPCION_CAJA
from AGENCIAS g, CAJAS c,USUARIOS u
WHERE g.ID_AGE = c.ID_CAJA
and c.ID_CAJA=u.ID_CAJA
and g.ESTADO_AGE=1 and c.ESTADO=1
and u.ID_USU=usuario;

/** agregar campos tabla ventas y detalle ventas*/
alter table VENTAS
ADD column SUBT_IVA NUMERIC(10,2) NOT NULL DEFAULT 0;

alter table VENTAS
ADD column SUBT_CERO NUMERIC(10,2) NOT NULL DEFAULT 0;

alter table VENTAS
ADD column TOTAL_DESC NUMERIC(10,2) NOT NULL DEFAULT 0;

alter table VENTAS
modify COLUMN IVA_VEN NUMERIC(10,2) NOT NULL DEFAULT 0;

alter table VENTAS
modify COLUMN TOTAL_VEN NUMERIC(10,2) NOT NULL DEFAULT 0;

alter table DETALLE_VENTAS
ADD column AHORRO NUMERIC(10,2) NOT NULL DEFAULT 0;

alter table DETALLE_VENTAS
ADD column SUBTOTAL NUMERIC(10,2) NOT NULL DEFAULT 0;

/** TRIGGER AFTER INSERT VENTAS- ACTUALIZA DOCUMENTOS Y INSERTA COMPROBANTE**/

DELIMITER //
create trigger trgInsertVentas
after insert on VENTAS
for each row
begin
DECLARE NUMFAC BIGINT DEFAULT 0;
SET NUMFAC = (SELECT EMPEZAR FROM DOCUMENTOS
              WHERE DOCUMENTOS.TIPO_DOC='Factura');
              

/* INGRESO DE UN NUEVO COMPROBANTE */
insert into COMPROBANTES(TIPO_DOC,ID_VEN,NUMERO_COM) VALUES('Factura',NEW.ID_VEN,NUMFAC);
/* ACTUALIZACION DEL CAMPO EMPEZAR EN LA TABLA DOCUMENTOS */
UPDATE DOCUMENTOS 
SET EMPEZAR=NUMFAC+1
WHERE TIPO_DOC='Factura';


end;
//